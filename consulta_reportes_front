<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Producción</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <style>
      /* Estilos adicionales para las fichas */
      .card-program {
        margin-bottom: 15px;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 15px;  
      }
      .card-program-header {
        background-color: #f8f9fa;
        padding: 10px 15px;
        border-bottom: 1px solid #eee;
        font-weight: bold;
      }
      .card-program-body {
        padding: 15px;
      }
      .card-program-item {
        margin-bottom: 5px;
      }
      .card-program-item strong {
        display: inline-block;
        width: 180px; /* Ancho fijo para las etiquetas para alineación */
      }
      /* Estilos para ocultar el botón de exportar cuando se imprime o exporta a PDF */
      @media print {
        .no-print {
          display: none !important;
        }
      }

      /* --- ESTILOS ESPECÍFICOS PARA EL PDF --- */
      /* Oculta los col-md-6/col-lg-4 para la exportación y hace que las tarjetas ocupen todo el ancho */
      .pdf-container .col-md-6, .pdf-container .col-lg-4 {
          flex: 0 0 100%;
          max-width: 100%;
      }
      /* Ajuste el margen inferior de las tarjetas para mejor separación en el PDF */
      .pdf-container .card-program {
          margin-bottom: 20px; /* Un poco más de espacio entre tarjetas en el PDF */
          box-shadow: none; /* Eliminar sombra para un look más limpio en PDF */
          border: 1px solid #ccc; /* Bordes más sutiles para PDF */
      }
      /* Eliminar el padding del cuerpo de la tarjeta para que el contenido se pegue menos a los bordes */
      .pdf-container .card-program-body {
          padding: 10px 15px;
      }
      /* Opcional: reducir el tamaño de fuente para que quepa más contenido */
      .pdf-container .card-program-item {
          font-size: 0.9em;
      }
      /* Ajustar el ancho de las etiquetas para que no se desborden si se reduce el tamaño de fuente general */
      .pdf-container .card-program-item strong {
          width: 160px; /* Un poco menos de ancho para etiquetas */
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="row d-flex align-items-center">
        <div class="col-3">
          <img src="" alt="" class="img-fluid" style="max-height: 150px;">
        </div>
        <div class="col-6 text-center">
          <h2>Servicios a la Producción</h2>
        </div>
        <div class="col-3 text-end">
          <img src="https://raw.githubusercontent.com/esantillan-design/Imagenes/refs/heads/main/logo_blanco2.png" alt="Logo de la Empresa" class="img-fluid" style="max-height: 150px;">
        </div>

      </div>
      <h1 class="text-start fs-5">Consulta de Reportes de Servicios</h1>

      <div class="row mb-3 no-print d-flex align-items-end">  
        <div class="col-md-2">
          <label for="filterDate" class="form-label"> Fecha:</label>
          <select class="form-select" id="filterDate" onchange="dateFilterChanged()">
            <option value="">Todas las Fechas</option>
            </select>
        </div>
        <div class="col-md-2">
          <label for="filterProduccion" class="form-label">Producción:</label>
          <select class="form-select" id="filterProduccion" onchange="applyFilters()">
            <option value="">Todas las Producciones</option>
            </select>
        </div>
        <div class="col-md-2">
          <label for="filterEjecutivo" class="form-label">Ejecutivo de Programas:</label>
          <select class="form-select" id="filterEjecutivo" onchange="applyFilters()">
            <option value="">Todos los Ejecutivos</option>
            </select>
        </div>
        <div class="col-md-2">
          <button class="btn btn-primary w-100" onclick="applyFilters()">Aplicar Filtros</button>
        </div>
        <div class="col-md-2">
          <button class="btn btn-secondary w-100" onclick="clearFilters()">Limpiar Filtros</button>
        </div>
        <div class="col-md-2">
          <button class="btn btn-success w-100" onclick="exportToPdf()">Exportar a PDF</button>
        </div>
      </div>
      <div id="cards-container" class="row">
        </div>
      <p id="no-results" class="text-muted text-center mt-4" style="display: none;">No se encontraron resultados para los filtros seleccionados.</p>

    <template id="cardTemplate">
      <div class="col-md-6 col-lg-4">
        <div class="card card-program">
          <div class="card-program-header">
            <span class="card-title-produccion"></span>
            <span class="float-end card-date-reserva"></span>
          </div>
          <div class="card-program-body">
            <p class="card-program-item"><strong>Ejecutivo de Programas:</strong> <span class="col-D"></span></p>
            <p class="card-program-item"><strong>Fecha Reserva Farmers Inicio:</strong> <span class="col-E-inicio"></span></p>
            <p class="card-program-item"><strong>Fecha Real Grabación Inicio:</strong> <span class="col-G"></span></p>
            <p class="card-program-item"><strong>Fecha Reserva Farmers Fin:</strong> <span class="col-F"></span></p>
            <p class="card-program-item"><strong>Fecha Real Grabación Fin:</strong> <span class="col-H"></span></p>
            <p class="card-program-item"><strong>Hora Reserva Inicio Farmers:</strong> <span class="col-AF"></span></p>
            <p class="card-program-item"><strong>Hora Real Grabación Inicio:</strong> <span class="col-AH"></span></p>
            <p class="card-program-item"><strong>Hora Reserva Fin Farmers:</strong> <span class="col-AG"></span></p>
            <p class="card-program-item"><strong>Hora Real Grabación Fin:</strong> <span class="col-AI"></span></p>
            <p class="card-program-item text-center"><strong><i>Evaluación de servicios</i></strong></p>
            <p class="card-program-item"><strong>Personal técnico en foro:</strong> <span class="col-Y"></span></p>
            <p class="card-program-item"><strong>Escenografía y utileria:</strong> <span class="col-AJ"></span></p>
            <p class="card-program-item"><strong>Maquillaje y vestuario:</strong> <span class="col-X"></span></p>
            <p class="card-program-item"><strong>Ingesta:</strong> <span class="col-Z"></span></p>
            <p class="card-program-item"><strong>Edición y Postproducción:</strong> <span class="col-AA"></span></p>
            <p class="card-program-item"><strong>Personal de iluminación:</strong> <span class="col-AK"></span></p>
            <p class="card-program-item"><strong>Personal de ingeniería:</strong> <span class="col-AC"></span></p>
            <p class="card-program-item"><strong>Equipo de ingeniería:</strong> <span class="col-AB"></span></p>
            <p class="card-program-item"><strong>Personal de sistemas:</strong> <span class="col-AD"></span></p>
            <p class="card-program-item"><strong>Equipo de sistemas:</strong> <span class="col-AE"></span></p>
            <p class="card-program-item text-center"><strong><i>Comentarios</i></strong></p>
            <p class="card-program-item"><strong>Responsable de la Producción:</strong> <span class="col-J"></span></p>
            <p class="card-program-item"><strong>Comentarios Producción:</strong> <span class="col-K"></span></p>
            <p class="card-program-item"><strong>Ingeniero responsable del foro:</strong> <span class="col-S"></span></p>
            <p class="card-program-item"><strong>Comentarios Ingeniería:</strong> <span class="col-T"></span></p>
            <p class="card-program-item"><strong>Ingeniero de Sistemas:</strong> <span class="col-Q"></span></p>
            <p class="card-program-item"><strong>Comentarios Sistemas:</strong> <span class="col-R"></span></p>
            <p class="card-program-item"><strong>Comentarios Servicios a la Producción:</strong> <span class="col-I"></span></p>
            <p class="card-program-item text-center"><strong><i>Servicios de maquillaje y vestuario</i></strong></p>
            <p class="card-program-item"><strong>Maquillaje mujer:</strong> <span class="col-L"></span></p>
            <p class="card-program-item"><strong>Maquillaje hombre:</strong> <span class="col-M"></span></p>
            <p class="card-program-item"><strong>Prendas:</strong> <span class="col-N"></span></p>
            <p class="card-program-item"><strong>Outfits:</strong> <span class="col-O"></span></p>
            <p class="card-program-item"><strong>Personas atendidas por stylist:</strong> <span class="col-P"></span></p>
              
          </div>
        </div>
      </div>
    </template>     

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>

    <script>
      window.addEventListener("load", initFiltersAndData);

      function initFiltersAndData() {
        populateDateFilter(); 
        populateEjecutivoFilter();
      }

      function populateDateFilter() {
        const filterDateSelect = document.getElementById("filterDate");
        filterDateSelect.innerHTML = '<option value="">Todas las Fechas</option>';
        
        google.script.run
          .withSuccessHandler(uniqueDates => {
            const todayFormatted = new Date().toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' });
            let todayOptionExists = false;

            uniqueDates.forEach(dateText => {
              const option = document.createElement("option");
              option.value = dateText;  
              option.textContent = dateText;
              filterDateSelect.appendChild(option);
              if (dateText === todayFormatted) {
                todayOptionExists = true;
              }
            });

            if (todayOptionExists) {
              filterDateSelect.value = todayFormatted;
            } else if (uniqueDates.length > 0) {
              filterDateSelect.value = uniqueDates[0];
            } else {
              filterDateSelect.value = '';
            }

            populateProduccionFilter(filterDateSelect.value);
            applyFilters();
          })
          .getUniqueDates();
      }

      function populateProduccionFilter(dateToFilter = '') {
        const filterProduccionSelect = document.getElementById("filterProduccion");
        filterProduccionSelect.innerHTML = '<option value="">Todas las Producciones</option>';  

        if (dateToFilter) {
          google.script.run
            .withSuccessHandler(uniqueNames => {
              uniqueNames.forEach(name => {
                const option = document.createElement("option");
                option.value = name;
                option.textContent = name;
                filterProduccionSelect.appendChild(option);
              });
            })
            .getUniqueProduccionNamesByDate(dateToFilter); 
        } else {
          google.script.run
            .withSuccessHandler(uniqueNames => {
              uniqueNames.forEach(name => {
                const option = document.createElement("option");
                option.value = name;
                option.textContent = name;
                filterProduccionSelect.appendChild(option);
              });
            })
            .getUniqueProduccionNames(); 
        }
      }

      function populateEjecutivoFilter() {
        const filterEjecutivoSelect = document.getElementById("filterEjecutivo");
        filterEjecutivoSelect.innerHTML = '<option value="">Todos los Ejecutivos</option>';

        google.script.run
          .withSuccessHandler(uniqueNames => {
            uniqueNames.forEach(name => {
              const option = document.createElement("option");
              option.value = name;
              option.textContent = name;
              filterEjecutivoSelect.appendChild(option);
            });
          })
          .getUniqueEjecutivos();
      }

      function dateFilterChanged() {
        const selectedDate = document.getElementById("filterDate").value;
        document.getElementById("filterProduccion").value = "";  
        populateProduccionFilter(selectedDate);
        applyFilters(); 
      }

      function applyFilters() {
        const filterDateValue = document.getElementById("filterDate").value;  
        const filterProduccionValue = document.getElementById("filterProduccion").value;
        const filterEjecutivoValue = document.getElementById("filterEjecutivo").value;
        
        const cardsContainer = document.getElementById("cards-container");
        cardsContainer.innerHTML = '<div class="text-center mt-5">Cargando datos...</div>';
        document.getElementById("no-results").style.display = "none";
        
        google.script.run
          .withSuccessHandler(dataToRender => {
            renderCards(dataToRender);
          })
          .getData(filterDateValue, filterProduccionValue, filterEjecutivoValue); 
      }

      function renderCards(dataToRender) {
        const cardsContainer = document.getElementById("cards-container");
        cardsContainer.innerHTML = "";  
        const template = document.getElementById("cardTemplate");
        const noResultsMessage = document.getElementById("no-results");  

        if (dataToRender.length === 0) {
            noResultsMessage.style.display = "block";  
            return;  
        } else {
            noResultsMessage.style.display = "none";  
        }

        dataToRender.forEach(fila => {
          const card = template.content.cloneNode(true);
          
          card.querySelector(".card-title-produccion").textContent = fila[21] || "Sin Nombre de Producción";  
          card.querySelector(".card-date-reserva").textContent = fila[4] || "Sin Fecha";  

          card.querySelector(".col-D").textContent = fila[3];  
          card.querySelector(".col-J").textContent = fila[9];  
          card.querySelector(".col-E-inicio").textContent = fila[4];  
          card.querySelector(".col-F").textContent = fila[5];  
          card.querySelector(".col-G").textContent = fila[6];  
          card.querySelector(".col-H").textContent = fila[7];  
          card.querySelector(".col-AF").textContent = fila[31];  
          card.querySelector(".col-AG").textContent = fila[32];  
          card.querySelector(".col-AH").textContent = fila[33];  
          card.querySelector(".col-AI").textContent = fila[34];  
          card.querySelector(".col-X").textContent = fila[23];  
          card.querySelector(".col-Y").textContent = fila[24];  
          card.querySelector(".col-Z").textContent = fila[25];  
          card.querySelector(".col-AA").textContent = fila[26];  
          card.querySelector(".col-AB").textContent = fila[27];  
          card.querySelector(".col-AC").textContent = fila[28];  
          card.querySelector(".col-AD").textContent = fila[29];  
          card.querySelector(".col-AE").textContent = fila[30];  
          card.querySelector(".col-AJ").textContent = fila[35];
          card.querySelector(".col-AK").textContent = fila[36];
          card.querySelector(".col-K").textContent = fila[10];  
          card.querySelector(".col-Q").textContent = fila[16];  
          card.querySelector(".col-R").textContent = fila[17];  
          card.querySelector(".col-S").textContent = fila[18];  
          card.querySelector(".col-T").textContent = fila[19];  
          card.querySelector(".col-L").textContent = fila[11];  
          card.querySelector(".col-M").textContent = fila[12];  
          card.querySelector(".col-N").textContent = fila[13];  
          card.querySelector(".col-O").textContent = fila[14];  
          card.querySelector(".col-P").textContent = fila[15];  
          card.querySelector(".col-I").textContent = fila[8];  
            
          cardsContainer.appendChild(card);
        });
      }

      function clearFilters() {
        document.getElementById("filterDate").value = '';
        document.getElementById("filterProduccion").value = '';
        document.getElementById("filterEjecutivo").value = '';
        populateProduccionFilter('');
        applyFilters(); 
      }

      // --- FUNCIÓN PARA EXPORTAR A PDF ---
      function exportToPdf() {
        const cardsContainer = document.getElementById('cards-container');  
        const noResultsMessage = document.getElementById('no-results');

        if (!cardsContainer || cardsContainer.children.length === 0 || noResultsMessage.style.display === 'block') {
            alert('No hay fichas para exportar a PDF o no se encontraron resultados.');
            return;
        }

        const pdfContent = cardsContainer.cloneNode(true);
        pdfContent.classList.add('pdf-container');  
          
        const pdfTitle = document.createElement('h2');
        const selectedDate = document.getElementById("filterDate").value;
        const selectedProduccion = document.getElementById("filterProduccion").value;
        const selectedEjecutivo = document.getElementById("filterEjecutivo").value;
          
        let titleText = "Reporte de Producción";
        if (selectedProduccion) {
            titleText += ` - ${selectedProduccion}`;
        }
        if (selectedDate) {
            titleText += ` (${selectedDate})`;
        }
        if (selectedEjecutivo) {
            titleText += ` - ${selectedEjecutivo}`;
        }
        pdfTitle.textContent = titleText;
        pdfTitle.style.textAlign = 'center';
        pdfTitle.style.marginBottom = '20px';
        pdfContent.prepend(pdfTitle);  

        const now = new Date();
        const year = now.getFullYear();
        const month = String(now.getMonth() + 1).padStart(2, '0');
        const day = String(now.getDate()).padStart(2, '0');
        const hours = String(now.getHours()).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');
        const seconds = String(now.getSeconds()).padStart(2, '0');
          
        let fileName = `${year}-${month}-${day}_${hours}${minutes}${seconds}`;
        if (selectedProduccion) {
            const cleanProduccionName = selectedProduccion.replace(/[^a-zA-Z0-9_ -]/g, '').trim();
            fileName += `_${cleanProduccionName}`;
        }
        fileName += '.pdf';

        const options = {
          margin: 10,
          filename: fileName,  
          image: { type: 'jpeg', quality: 0.98 },
          html2canvas: {  
              scale: 2,  
              logging: true,  
              dpi: 192,  
              letterRendering: true,
              useCORS: true
          },
          jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
        };

        html2pdf().set(options).from(pdfContent).save();  
      }
    </script>       
  </body>
</html>
